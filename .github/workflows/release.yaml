name: release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Release
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '>=1.18.0'

      - run: |
          rm -f ./toolbx || true
          env GOOS=linux GOARCH=amd64 go build ./cmd/toolbx
          tar -czvf toolbx-${{github.ref_name}}-linux-64bit.tar.gz b./toolbx

      - run: |
          rm -f ./toolbx || true
          env GOOS=darwin GOARCH=amd64 go build ./cmd/toolbx
          tar -czvf toolbx-${{github.ref_name}}-macos-64bit.tar.gz b./toolbx

      - run: |
          rm -f ./toolbx || true
          env GOOS=windows GOARCH=amd64 go build ./cmd/toolbx
          zip toolbx-${{github.ref_name}}-win-64bit.zip ./toolbx

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false

      - name: Upload Linux archive
        id: upload-linux-archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./toolbx-commands-${{github.ref_name}}-linux-64bit.tar.gz
          asset_name: toolbx-commands-${{github.ref_name}}-linux-64bit.tar.gz
          asset_content_type: application/x-gzip

      - name: Upload MacOS archive
        id: upload-macos-archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./toolbx-commands-${{github.ref_name}}-macos-64bit.tar.gz
          asset_name: toolbx-commands-${{github.ref_name}}-macos-64bit.tar.gz
          asset_content_type: application/x-gzip

      - name: Upload Win archive
        id: upload-macos-archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./toolbx-commands-${{github.ref_name}}-win-64bit.zip
          asset_name: toolbx-commands-${{github.ref_name}}-win-64bit.zip
          asset_content_type: application/zip
